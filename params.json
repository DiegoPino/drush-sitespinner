{
  "name": "ICG Drush-SiteSpinner",
  "tagline": "Drush-SiteSpinner creates a new Drupal multisite based on an existing template site. It uses drush site alias files to describe both the source and destination sites. The source site's database and files directory are copied to the destination site, and then any variables specified in the destination alias are written on the destination site, overriding the original values.",
  "body": "# ICG Drush-SiteSpinner\r\n\r\n#### Download And Install\r\n\r\nYou can find the latest version on bitbucket:\r\n[bitbucket.org/commonmedia/drush-sitespinner](https://bitbucket.org/commonmedia/drush-sitespinner)\r\nBest option is to cd into your drush/commands folder, and clone the script:\r\n\r\n     git clone git@bitbucket.org:commonmedia/drush-sitespinner.git\r\n\r\n#### Introduction\r\n\r\nSitespinner provides two drush commands: sitespinner (ss), and \r\nsitespinner-delete (ssd).\r\n\r\n**Sitespinner** creates a new Drupal multisite based on an existing template site. \r\nIt uses drush site alias files to describe both the source and destination \r\nsites. The source site's database and files directory are copied to the \r\ndestination site, and then any variables specified in the destination alias are\r\nwritten on the destination site, overriding the original values.\r\n\r\nThis is a novel approach to using site aliases, since normally they are used to\r\ndescribe sites that already exist. It occurred to us as we began to think about\r\nhow to supply configuration options to a drush command, that extending the idea \r\nof site alias files made a lot of sense. A standard site alias file already \r\nprovides information about where the site lives and how it is eached ('root' \r\nand 'uri'), how it connects to the database, where it's files directory is, etc.\r\n\r\nOnce source and destination alias files are created, then the command is simply:\r\n\r\n    drush sitespinner @source-alias @destination-alias\r\n\r\n**Sitespinner-delete** simply deletes a multisite, given the site alias for that\r\nsite. Specifically, it deletes associated database, removes the files directory,\r\nremoves the sites/{site root} directory, and deletes the multisite symlink at\r\nthe drupal root.\r\n    \r\n#### Requirements\r\n\r\n* [drush-All-Versions-2.0.tar.gz](http://ftp.drupal.org/files/projects/drush-All-Versions-2.0.tar.gz) Or later.\r\n* Or any later version should work.\r\n* PHP, Apache2, MySQL or PostgreSQL\r\n* sudo (and root privileges) (on other Debian you may need to do:\r\n\r\n    su root\r\n\r\n* Access to creating databases (MySQL or PostgreSQL or both)\r\n\r\n#### Usage\r\n\r\nTo use this command, you must have a working Drupal site that either already\r\nis functioning as a multisite, or that you want to function as a multisite. You must\r\nhave created a site alias file for the existing (source) site that you wish to\r\nuse as a template for the new multisite. This can be the root (default) site,\r\nor another multisite found in the sites directory. Finally, you will need to\r\ncreate a site alias file for the new (destination) multisite that you wish to\r\ncreate.\r\n \r\nConsult the sample aliases file found within the examples folder. Also, consult\r\nthe documentation for drush alias files:\r\n\r\n    drush topic docs-aliases\r\n\r\nAlias files are typically installed at ~/.drush/. Consult the above documentation\r\nfor alternate locations.\r\n\r\nTo be used as a source alias with sitespinner, the source alias file, at a\r\nminimum, needs to provide values for these:\r\n\r\n    ['root'] (The Drupal root)\r\n    ['uri']\r\n    ['db_url'] or ['databases']\r\n    ['path-aliases']['%files']\r\n\r\nTo be used as a destination site alias, the file needs to provide, at a minimum,\r\nvalues for these:\r\n\r\n    ['root'] (This is the drupal root, not the path to the actual multisite's directory under /sites/.)\r\n    ['uri']\r\n    ['databases']['default']['default'] (IMPORTANT: ['db_url'] will not work!!!!)\r\n    ['path-aliases']['%files']\r\n    \r\nOther sitespinner-specific values that you should normally provide:\r\n\r\n    ['sitespinner-destination']['db_creator'] = array(\r\n        'username' => \"...\",\r\n        'password' => \"...\",\r\n    );\r\n        Since you will be creating a database, you will probably need \r\n        to provide a mysql username and password for a more privileged \r\n        user than your standard drupal database user. If not provided, then\r\n        this command will attempt to create the database using the default\r\n        drupal database connection info.\r\n        \r\n    ['sitespinner-destination']['settings_file_template'] \r\n        A path to a file to use as a settings.php template. It must contain a\r\n        line with the text  \"$databases = array();\". If not provided, the \r\n        /sites/default/default.settings.php file will be used.\r\n        \r\n    ['sitespinner-destination']['server-environment'] = array(\r\n        'default_user' => \"...\",\r\n        'default_group' => \"...\",\r\n        'settings_file_permissions' => '640',\r\n        'files_directory_permissions' => '770',\r\n    );\r\n        Users, groups, and permissions for the files and directories that will be created.\r\n        \r\n    ['sitespinner-destination']['create-domain'] = array(\r\n        'type' => 'path',\r\n        'name' => '...',\r\n    );\r\n        TODO: Not fully implemented. Read the notes in the sample aliases file.\r\n\r\nVariable overrides. Any key => value pairs that you put into the variables array\r\nwill be written to the variables table in the destination site's database. In this way\r\nyou can specify the site name, theme settings, and many other configuration options.\r\nAny array values will be recursively merged with values provided in inherited (parent) alias\r\nfiles.\r\n\r\n    ['sitespinner-destination']['variables'] = array(\r\n        'key' => 'value',\r\n        'another key' => array(\r\n            'cool' => 'I can write arrays to the variables table!'\r\n        ),\r\n    );\r\n\r\n#### Using parent aliases\r\n\r\nA little known feature of drush site aliases is that you can specify a comma-separated\r\nlist of site aliases whose properties will be inherited by this alias. To do so, add a\r\n'parent' key to the alias array:\r\n\r\n    'parent' => '@etc, @grandparent, @parent',\r\n\r\nThis can be handy when managing multiple configurations of sites in your multisite\r\nsetup. You can define the characteristics that are common to a given configuration\r\nin the parent alias, and then in the child site, just provide those details that\r\nare needed for that site.\r\n\r\n#### Options\r\n\r\nYou can use the following flags:\r\n\r\n    --simulate\r\n\r\nflag to see what the commands will do to your system. When using simulate there\r\nwill be no changes to your system.\r\n\r\n    -f\r\n\r\nForce the script to continue when errors are encountered. E.g.:\r\nYou have tried to install a site but your failed halfway due to permissions.\r\nYou can then change the permissions on your server, and force the script to execute.\r\n\r\n    -s\r\n\r\nSilence the script will produce less output, and only prompt you when\r\nquestions are raised.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}